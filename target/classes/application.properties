spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

server.port=8081

spring.application.name=fee-service

# Kafka Broker Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=fee-payment-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.cloud.circuitbreaker.resilience4j.instances.feeService.slidingWindowSize=100
spring.cloud.circuitbreaker.resilience4j.instances.feeService.failureRateThreshold=50
spring.cloud.circuitbreaker.resilience4j.instances.feeService.waitDurationInOpenState=10000ms
spring.cloud.circuitbreaker.resilience4j.instances.feeService.permittedNumberOfCallsInHalfOpenState=5
spring.cloud.circuitbreaker.resilience4j.instances.feeService.maxRetries=3
spring.cloud.circuitbreaker.resilience4j.instances.feeService.retryTimeout=5000ms

resilience4j.retry.instances.feeService.maxAttempts=3
resilience4j.retry.instances.feeService.waitDuration=1000ms
resilience4j.retry.instances.feeService.enableExponentialBackoff=true
resilience4j.retry.instances.feeService.multiplier=2
resilience4j.retry.instances.feeService.maxWaitDuration=5000ms

resilience4j.timelimiter.instances.feeService.timeoutDuration=5000ms


